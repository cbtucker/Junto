/**
 * Copyright © 2002 Macromedia, Inc. All rights reserved.   
 * 
 * roomlist.asc 
 * Moving or modifying this file may affect the applications installed on this server. 
 */

try { var dummy = FCRoomList; } catch ( e ) { // #ifndef FCRoomList

	load( "components/component.asc" );
	
	//
	// Room List component class
	//
	FCRoomList = function(name) {
		this.init(name);
	
		// Get a persistent shared object for the list of rooms
		this.rooms_so = SharedObject.get( this.prefix + "rooms", true );

		this.roomId = 0;
	}
	
	// All named instances are held in instances
	FCRoomList.prototype = new FCComponent("FCRoomList", FCRoomList);
	
	///////////////////////////////////////////////////////////////////////////
	// Methods that a client side component calls explicitly
	
	// The first method called by a client component
	FCRoomList.prototype.connect = function( client ) {
		client.call( this.callPrefix + "setUsername", null, this.getClientGlobalStorage(client).username);
	}
	
	// The last method called by a client component
	FCRoomList.prototype.close = function( client ) {
	}
	

	///////////////////////////////////////////////////////////////////////////
	// Helper and utility methods

	FCRoomList.prototype.createRoom = function(client, roomName, roomDescription) {
		//trace("Create Room: " + roomName + ", " + roomDescription);
		var roomObj = new Object();
		roomObj.room = roomName;
		roomObj.description = roomDescription;
		roomObj.users = 0;
		roomObj.id = "r" + this.roomId++;
		this.rooms_so.setProperty(roomObj.id, roomObj);
		this.rooms_so.setProperty("roomId", this.roomId);
	}
	
	FCRoomList.prototype.deleteRoom = function(client, roomId) {
		//trace("Delete Room: " + roomId);
		if (this.rooms_so.getProperty(roomId).users < 1) {
			this.rooms_so.setProperty(roomId, null);
		}
	}
	
	FCRoomList.prototype.roomConnect = function (client, room) {
		//trace("Room Bump: " + room);
		var roomObj = this.rooms_so.getProperty(room);
		roomObj.users++;
		//trace("User Joined Room: " + room + ", " + roomObj.users)
		this.rooms_so.setProperty(room, roomObj);
		return roomObj.room;
	}
	
	FCRoomList.prototype.roomDisconnect = function (client, room) {
		var roomObj = this.rooms_so.getProperty(room);
		roomObj.users = roomObj.users > 0 ? roomObj.users - 1 : 0;
		//trace("User Left Room: " + room + ", " + roomObj.users);
		this.rooms_so.setProperty(room, roomObj);
	}
	
	trace( "RoomList loaded successfully." );

} // #endif
